
# This file is generated by PaConvert ToolKit, please Don't edit it!
import paddle

def mul(self, *args, **kwargs):
    if 'other' in kwargs:
        y = kwargs['other']
    elif 'y' in kwargs:
        y = kwargs['y']
    else:
        y = args[0]

    if not isinstance(y, paddle.Tensor):
        y = paddle.to_tensor(y)

    return paddle.multiply(self, y)

setattr(paddle.Tensor, 'mul', mul)
setattr(paddle.Tensor, 'multiply', mul)

def add(self, *args, **kwargs):
    if 'other' in kwargs:
        y = kwargs['other']
    elif 'y' in kwargs:
        y = kwargs['y']
    else:
        y = args[0]

    if 'alpha' in kwargs:
        alpha = kwargs['alpha']
        if alpha != 1:
            if not isinstance(y, paddle.Tensor):
                y = paddle.to_tensor(alpha * y)
            else:
                y = alpha * y
    else:
        if not isinstance(y, paddle.Tensor):
            y = paddle.to_tensor(y)

    return paddle.add(self, y)

setattr(paddle.Tensor, 'add', add)

def reshape(self, *args, **kwargs):
    if args:
        if len(args)==1 and isinstance(args[0], (tuple, list)):
            return paddle.reshape(self, args[0])
        else:
            return paddle.reshape(self, list(args))
    elif kwargs:
        assert 'shape' in kwargs
        return paddle.reshape(self, shape=kwargs['shape'])

setattr(paddle.Tensor, 'reshape', reshape)
